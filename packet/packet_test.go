//: ----------------------------------------------------------------------------
//: Copyright (C) 2017 Verizon.  All Rights Reserved.
//: All Rights Reserved
//:
//: file:    packet_test.go
//: details: TODO
//: author:  Mehrdad Arshad Rad
//: date:    02/01/2017
//:
//: Licensed under the Apache License, Version 2.0 (the "License");
//: you may not use this file except in compliance with the License.
//: You may obtain a copy of the License at
//:
//:     http://www.apache.org/licenses/LICENSE-2.0
//:
//: Unless required by applicable law or agreed to in writing, software
//: distributed under the License is distributed on an "AS IS" BASIS,
//: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//: See the License for the specific language governing permissions and
//: limitations under the License.
//: ----------------------------------------------------------------------------

package packet

import "testing"

func TestDecodeEthernetIPv4TCP(t *testing.T) {
	b := []byte{
		0xde, 0xad, 0x7a, 0x48, 0xcc, 0x37, 0xd4, 0x4, 0xff, 0x1, 0x18, 0x1e,
		0x81, 0x0, 0x0, 0x7, 0x8, 0x0, 0x45, 0x0, 0x2, 0x6b, 0x95, 0x54, 0x40,
		0x0, 0x3c, 0x6, 0xab, 0x3b, 0x6c, 0xa1, 0xf8, 0x5e, 0xc0, 0xe5, 0xd6,
		0x17, 0x1f, 0xf7, 0xc5, 0xe5, 0xf, 0xf5, 0x1c, 0x14, 0x68, 0xa4, 0x11,
		0x89, 0x80, 0x18, 0x1, 0x7, 0x35, 0xdc, 0x0, 0x0, 0x1, 0x1, 0x8, 0xa,
		0x17, 0x32, 0x75, 0x97, 0xf8, 0x73, 0x54, 0x15, 0x17, 0x3, 0x3, 0x0,
		0x1a, 0xad, 0xf8, 0x9d, 0x51, 0x3e, 0xcc, 0x7e, 0x5b, 0x6f, 0xdd, 0x16,
		0x5a, 0xd3, 0xb4, 0x34, 0x7a, 0x4f, 0x8e, 0xc5, 0xa5, 0x5a, 0x3e, 0x8e,
		0xea, 0x51, 0xb7, 0x17, 0x3, 0x3, 0x0, 0x1c, 0xad, 0xf8, 0x9d, 0x51,
		0x3e, 0xcc, 0x7e, 0x5c, 0xe0, 0x79, 0xdb, 0x6f, 0x11, 0xc9, 0x50,
		0x2f, 0x5e, 0x3e, 0x15, 0xcf, 0xf5, 0x62,
	}
	p := NewPacket()
	_, err := p.Decoder(b, headerProtocolEthernet)
	if err != nil {
		t.Error("unexpected error", err)
	}
}

func BenchmarkDecodeEthernetIPv4TCP(b *testing.B) {
	data := []byte{
		0xde, 0xad, 0x7a, 0x48, 0xcc, 0x37, 0xd4, 0x4, 0xff, 0x1, 0x18, 0x1e,
		0x81, 0x0, 0x0, 0x7, 0x8, 0x0, 0x45, 0x0, 0x2, 0x6b, 0x95, 0x54, 0x40,
		0x0, 0x3c, 0x6, 0xab, 0x3b, 0x6c, 0xa1, 0xf8, 0x5e, 0xc0, 0xe5, 0xd6,
		0x17, 0x1f, 0xf7, 0xc5, 0xe5, 0xf, 0xf5, 0x1c, 0x14, 0x68, 0xa4, 0x11,
		0x89, 0x80, 0x18, 0x1, 0x7, 0x35, 0xdc, 0x0, 0x0, 0x1, 0x1, 0x8, 0xa,
		0x17, 0x32, 0x75, 0x97, 0xf8, 0x73, 0x54, 0x15, 0x17, 0x3, 0x3, 0x0,
		0x1a, 0xad, 0xf8, 0x9d, 0x51, 0x3e, 0xcc, 0x7e, 0x5b, 0x6f, 0xdd, 0x16,
		0x5a, 0xd3, 0xb4, 0x34, 0x7a, 0x4f, 0x8e, 0xc5, 0xa5, 0x5a, 0x3e, 0x8e,
		0xea, 0x51, 0xb7, 0x17, 0x3, 0x3, 0x0, 0x1c, 0xad, 0xf8, 0x9d, 0x51,
		0x3e, 0xcc, 0x7e, 0x5c, 0xe0, 0x79, 0xdb, 0x6f, 0x11, 0xc9, 0x50,
		0x2f, 0x5e, 0x3e, 0x15, 0xcf, 0xf5, 0x62,
	}
	for i := 0; i < b.N; i++ {
		p := NewPacket()
		p.Decoder(data, headerProtocolEthernet)
	}
}
